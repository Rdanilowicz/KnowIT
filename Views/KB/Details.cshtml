@model KnowIT.Models.Article

@{
    ViewData["Title"] = "Article Details";
}

<div class="container">
    <h2 class="my-4">@Model.Title</h2>

    <!-- Display Category -->
    <div class="row mb-4">
        <div class="col-md-8">
            @if (Model.Category != null)
            {
                <div class="alert alert-info">
                    <strong>Category:</strong> @Model.Category.Name
                </div>
            }
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <h3 class="card-title">Content</h3>
                    <div class="card-text" id="article-content">
                        @Html.Raw(Model.Content)
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="row">
        <div class="col-md-8">
            <!-- Only show Edit and Delete buttons if the user is an Admin -->
            @if (User.IsInRole("Admin"))
            {
                <a asp-controller="KB" asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary btn-lg mr-2">Edit</a>
                <a asp-controller="KB" asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger btn-lg">Delete</a>
            }
        </div>
    </div>
</div>

<!-- Add the DOMPurify script to sanitize content on page load -->
<script src="https://cdn.jsdelivr.net/npm/dompurify@2.3.5/dist/purify.min.js"></script>
<script>
    // Ensure the page content is sanitized after it's loaded
    window.onload = function () {
        const contentElement = document.getElementById('article-content');
        if (contentElement) {
            // Sanitize the inner HTML of the content before displaying
            contentElement.innerHTML = DOMPurify.sanitize(contentElement.innerHTML);
        }
    };
</script>
